<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="210ec807-d781-44f7-9f9e-0824e0a28086" name="Changes" comment="feat: Implementa métodos de registro de entrada/saída e getHoras/getValor na classe Ticket&#10;&#10;Nesta aula de 27/10, adicionamos os métodos de registro de entrada/saída, bem como otimizamos o código de getValor. No entanto, o getValor agora inclui aninhamentos complexos de condicionais. Qualquer alteração nessa lógica exigirá testes abrangentes em todas as opções de cálculo de estacionamento.">
      <change beforePath="$PROJECT_DIR$/src/main/java/br/estacionamento/dominio/Ticket.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/br/estacionamento/dominio/Ticket.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="e4d11623-d0d5-44a0-826c-36126f1f4e95" />
        <option name="url" value="https://github.com/tarley/estacionamento-2023.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2X3AymEiTNyMKqel5FP2mbgBip2" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/tarle/Downloads/POO-2023/JeffersonLuisCaetano (2)/PooAv1&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="210ec807-d781-44f7-9f9e-0824e0a28086" name="Changes" comment="" />
      <created>1697847649124</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1697847649124</updated>
    </task>
    <task id="LOCAL-00001" summary="feat: Implementa métodos de registro de entrada/saída e getHoras/getValor na classe Ticket&#10;&#10;Nesta aula de 27/10, adicionamos os métodos de registro de entrada/saída, bem como otimizamos o código de getValor. No entanto, o getValor agora inclui aninhamentos complexos de condicionais. Qualquer alteração nessa lógica exigirá testes abrangentes em todas as opções de cálculo de estacionamento.">
      <created>1698508774448</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1698508774448</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: Implementa métodos de registro de entrada/saída e getHoras/getValor na classe Ticket&#10;&#10;Nesta aula de 27/10, adicionamos os métodos de registro de entrada/saída, bem como otimizamos o código de getValor. No entanto, o getValor agora inclui aninhamentos complexos de condicionais. Qualquer alteração nessa lógica exigirá testes abrangentes em todas as opções de cálculo de estacionamento." />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Implementa métodos de registro de entrada/saída e getHoras/getValor na classe Ticket&#10;&#10;Nesta aula de 27/10, adicionamos os métodos de registro de entrada/saída, bem como otimizamos o código de getValor. No entanto, o getValor agora inclui aninhamentos complexos de condicionais. Qualquer alteração nessa lógica exigirá testes abrangentes em todas as opções de cálculo de estacionamento." />
  </component>
</project>